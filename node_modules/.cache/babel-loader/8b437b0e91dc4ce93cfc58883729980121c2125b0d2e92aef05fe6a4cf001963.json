{"ast":null,"code":"var _jsxFileName = \"D:\\\\UTM\\\\Anul 2\\\\Semestrul 2\\\\Tehnologii web\\\\Project\\\\src\\\\MyLayout.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Layout as AntLayout, Menu, Card, Form, Input, Button } from 'antd'; // Importăm Form, Input și Button din biblioteca Ant Design\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = AntLayout;\nconst MyLayout = () => {\n  _s();\n  const [aboutMeVisible, setAboutMeVisible] = useState(false);\n  const [submenuVisible, setSubmenuVisible] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [showAddCardForm, setShowAddCardForm] = useState(false);\n};\n_s(MyLayout, \"NRB9g46ctagZ6Bej56eWinKWPDk=\");\n_c = MyLayout;\nconst AddCardForm = ({\n  addCard\n}) => {\n  _s2();\n  const [form] = Form.useForm();\n\n  // Funcție pentru formatarea automată a numărului de card\n  const handleCardNumberChange = event => {\n    let cardNumber = event.target.value.replace(/\\s/g, ''); // Eliminăm spațiile existente\n    cardNumber = cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Adăugăm spații după fiecare grup de patru cifre\n    form.setFieldsValue({\n      cardNumber\n    }); // Actualizăm valoarea câmpului\n  };\n  const onFinish = values => {\n    addCard(values);\n    form.resetFields();\n  };\n  const validateName = (_, value) => {\n    const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter only letters for name'));\n    }\n    return Promise.resolve();\n  };\n  const validateSurname = (_, value) => {\n    const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter only letters for surname'));\n    }\n    return Promise.resolve();\n  };\n  const validateCardNumber = (_, value) => {\n    const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/; // Verifică formatul: patru cifre, un spațiu, patru cifre, un spațiu, patru cifre, un spațiu, patru cifre\n    if (!regex.test(value.trim())) {\n      return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\n    }\n    return Promise.resolve();\n  };\n  const validateExpiration = (_, value) => {\n    const regex = /^(0[1-9]|1[0-2])\\/\\d{2}$/; // Formatul trebuie să fie MM/YY\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter a valid expiration date (MM/YY)'));\n    }\n    return Promise.resolve();\n  };\n  const validateCVV = (_, value) => {\n    const regex = /^\\d{3}$/;\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter a valid 3-digit CVV'));\n    }\n    return Promise.resolve();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        validator: validateName\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        validator: validateSurname\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"cardNumber\",\n      rules: [{\n        required: true,\n        validator: validateCardNumber\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Card Number\",\n        maxLength: 19,\n        onChange: handleCardNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"expiration\",\n      rules: [{\n        required: true,\n        validator: validateExpiration\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Expiration (MM/YY)\",\n        maxLength: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"cvv\",\n      rules: [{\n        required: true,\n        validator: validateCVV\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"CVV\",\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s2(AddCardForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n_c2 = AddCardForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyLayout\");\n$RefreshReg$(_c2, \"AddCardForm\");","map":{"version":3,"names":["React","useState","Layout","AntLayout","Menu","Card","Form","Input","Button","jsxDEV","_jsxDEV","Header","Content","MyLayout","_s","aboutMeVisible","setAboutMeVisible","submenuVisible","setSubmenuVisible","cards","setCards","showAddCardForm","setShowAddCardForm","_c","AddCardForm","addCard","_s2","form","useForm","handleCardNumberChange","event","cardNumber","target","value","replace","setFieldsValue","onFinish","values","resetFields","validateName","_","regex","test","Promise","reject","Error","resolve","validateSurname","validateCardNumber","trim","validateExpiration","validateCVV","children","Item","name","rules","required","validator","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","onChange","type","htmlType","_c2","$RefreshReg$"],"sources":["D:/UTM/Anul 2/Semestrul 2/Tehnologii web/Project/src/MyLayout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Layout as AntLayout, Menu, Card, Form, Input, Button } from 'antd'; // Importăm Form, Input și Button din biblioteca Ant Design\r\n\r\nconst { Header, Content } = AntLayout;\r\n\r\nconst MyLayout = () => {\r\n    const [aboutMeVisible, setAboutMeVisible] = useState(false);\r\n    const [submenuVisible, setSubmenuVisible] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n    const [showAddCardForm, setShowAddCardForm] = useState(false);\r\n};\r\nconst AddCardForm = ({ addCard }) => {\r\n    const [form] = Form.useForm();\r\n\r\n    // Funcție pentru formatarea automată a numărului de card\r\n    const handleCardNumberChange = (event) => {\r\n        let cardNumber = event.target.value.replace(/\\s/g, ''); // Eliminăm spațiile existente\r\n        cardNumber = cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Adăugăm spații după fiecare grup de patru cifre\r\n        form.setFieldsValue({ cardNumber }); // Actualizăm valoarea câmpului\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        addCard(values);\r\n        form.resetFields();\r\n    };\r\n\r\n    const validateName = (_, value) => {\r\n        const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter only letters for name'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateSurname = (_, value) => {\r\n        const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter only letters for surname'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateCardNumber = (_, value) => {\r\n        const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/; // Verifică formatul: patru cifre, un spațiu, patru cifre, un spațiu, patru cifre, un spațiu, patru cifre\r\n        if (!regex.test(value.trim())) {\r\n            return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateExpiration = (_, value) => {\r\n        const regex = /^(0[1-9]|1[0-2])\\/\\d{2}$/; // Formatul trebuie să fie MM/YY\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter a valid expiration date (MM/YY)'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateCVV = (_, value) => {\r\n        const regex = /^\\d{3}$/;\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter a valid 3-digit CVV'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish}>\r\n            <Form.Item name=\"name\" rules={[{ required: true, validator: validateName }]}>\r\n                <Input placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"surname\" rules={[{ required: true, validator: validateSurname }]}>\r\n                <Input placeholder=\"Surname\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"cardNumber\" rules={[{ required: true, validator: validateCardNumber }]}>\r\n                <Input placeholder=\"Card Number\" maxLength={19} onChange={handleCardNumberChange} />\r\n            </Form.Item>\r\n            <Form.Item name=\"expiration\" rules={[{ required: true, validator: validateExpiration }]}>\r\n                <Input placeholder=\"Expiration (MM/YY)\" maxLength={5} />\r\n            </Form.Item>\r\n            <Form.Item name=\"cvv\" rules={[{ required: true, validator: validateCVV }]}>\r\n                <Input placeholder=\"CVV\" maxLength={3} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add Card\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}