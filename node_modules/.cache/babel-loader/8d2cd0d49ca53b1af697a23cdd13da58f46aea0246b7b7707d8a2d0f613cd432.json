{"ast":null,"code":"var _jsxFileName = \"D:\\\\UTM\\\\Anul 2\\\\Semestrul 2\\\\Tehnologii web\\\\Project\\\\src\\\\MyLayout.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCardForm = ({\n  addCard\n}) => {\n  _s();\n  const [form] = Form.useForm();\n\n  // Funcție pentru formatarea automată a numărului de card\n  const handleCardNumberChange = event => {\n    let cardNumber = event.target.value.replace(/\\s/g, ''); // Eliminăm spațiile existente\n    cardNumber = cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Adăugăm spații după fiecare grup de patru cifre\n    form.setFieldsValue({\n      cardNumber\n    }); // Actualizăm valoarea câmpului\n  };\n  const onFinish = values => {\n    addCard(values);\n    form.resetFields();\n  };\n  const validateName = (_, value) => {\n    const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter only letters for name'));\n    }\n    return Promise.resolve();\n  };\n  const validateSurname = (_, value) => {\n    const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter only letters for surname'));\n    }\n    return Promise.resolve();\n  };\n  const validateCardNumber = (_, value) => {\n    const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/; // Verifică formatul: patru cifre, un spațiu, patru cifre, un spațiu, patru cifre, un spațiu, patru cifre\n    if (!regex.test(value.trim())) {\n      return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\n    }\n    return Promise.resolve();\n  };\n  const validateExpiration = (_, value) => {\n    const regex = /^(0[1-9]|1[0-2])\\/\\d{2}$/; // Formatul trebuie să fie MM/YY\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter a valid expiration date (MM/YY)'));\n    }\n    return Promise.resolve();\n  };\n  const validateCVV = (_, value) => {\n    const regex = /^\\d{3}$/;\n    if (!regex.test(value)) {\n      return Promise.reject(new Error('Please enter a valid 3-digit CVV'));\n    }\n    return Promise.resolve();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        validator: validateName\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"surname\",\n      rules: [{\n        required: true,\n        validator: validateSurname\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"cardNumber\",\n      rules: [{\n        required: true,\n        validator: validateCardNumber\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Card Number\",\n        maxLength: 19,\n        onChange: handleCardNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"expiration\",\n      rules: [{\n        required: true,\n        validator: validateExpiration\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Expiration (MM/YY)\",\n        maxLength: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"cvv\",\n      rules: [{\n        required: true,\n        validator: validateCVV\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"CVV\",\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCardForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", true);\n_c = AddCardForm;\nvar _c;\n$RefreshReg$(_c, \"AddCardForm\");","map":{"version":3,"names":["AddCardForm","addCard","_s","form","Form","useForm","handleCardNumberChange","event","cardNumber","target","value","replace","setFieldsValue","onFinish","values","resetFields","validateName","_","regex","test","Promise","reject","Error","resolve","validateSurname","validateCardNumber","trim","validateExpiration","validateCVV","_jsxDEV","children","Item","name","rules","required","validator","Input","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","onChange","Button","type","htmlType","_c","$RefreshReg$"],"sources":["D:/UTM/Anul 2/Semestrul 2/Tehnologii web/Project/src/MyLayout.js"],"sourcesContent":["const AddCardForm = ({ addCard }) => {\r\n    const [form] = Form.useForm();\r\n\r\n    // Funcție pentru formatarea automată a numărului de card\r\n    const handleCardNumberChange = (event) => {\r\n        let cardNumber = event.target.value.replace(/\\s/g, ''); // Eliminăm spațiile existente\r\n        cardNumber = cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Adăugăm spații după fiecare grup de patru cifre\r\n        form.setFieldsValue({ cardNumber }); // Actualizăm valoarea câmpului\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        addCard(values);\r\n        form.resetFields();\r\n    };\r\n\r\n    const validateName = (_, value) => {\r\n        const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter only letters for name'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateSurname = (_, value) => {\r\n        const regex = /^[a-zA-Z\\s]+$/; // Permite doar litere și spații\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter only letters for surname'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateCardNumber = (_, value) => {\r\n        const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/; // Verifică formatul: patru cifre, un spațiu, patru cifre, un spațiu, patru cifre, un spațiu, patru cifre\r\n        if (!regex.test(value.trim())) {\r\n            return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateExpiration = (_, value) => {\r\n        const regex = /^(0[1-9]|1[0-2])\\/\\d{2}$/; // Formatul trebuie să fie MM/YY\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter a valid expiration date (MM/YY)'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const validateCVV = (_, value) => {\r\n        const regex = /^\\d{3}$/;\r\n        if (!regex.test(value)) {\r\n            return Promise.reject(new Error('Please enter a valid 3-digit CVV'));\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish}>\r\n            <Form.Item name=\"name\" rules={[{ required: true, validator: validateName }]}>\r\n                <Input placeholder=\"Name\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"surname\" rules={[{ required: true, validator: validateSurname }]}>\r\n                <Input placeholder=\"Surname\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"cardNumber\" rules={[{ required: true, validator: validateCardNumber }]}>\r\n                <Input placeholder=\"Card Number\" maxLength={19} onChange={handleCardNumberChange} />\r\n            </Form.Item>\r\n            <Form.Item name=\"expiration\" rules={[{ required: true, validator: validateExpiration }]}>\r\n                <Input placeholder=\"Expiration (MM/YY)\" maxLength={5} />\r\n            </Form.Item>\r\n            <Form.Item name=\"cvv\" rules={[{ required: true, validator: validateCVV }]}>\r\n                <Input placeholder=\"CVV\" maxLength={3} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add Card\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}