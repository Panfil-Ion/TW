{"ast":null,"code":"const validateCardNumber = (_, value) => {\n  // Eliminăm toate spațiile din valoare pentru a le adăuga noi mai târziu\n  value = value.replace(/\\s/g, '');\n\n  // Adăugăm automat spațiu după fiecare grup de patru cifre\n  value = value.replace(/(.{4})/g, '$1 ');\n\n  // Eliminăm spațiile de la sfârșitul șirului, în caz că lungimea este mai mare decât 16 cifre\n  value = value.trim();\n\n  // Actualizăm valoarea în câmpul de formular\n  form.setFieldsValue({\n    cardNumber: value\n  });\n\n  // Verificăm formatul: patru cifre, o bara de spațiu, patru cifre, o bara de spațiu, patru cifre, o bara de spațiu, patru cifre\n  const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/;\n  if (!regex.test(value)) {\n    return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\n  }\n  return Promise.resolve();\n};","map":{"version":3,"names":["validateCardNumber","_","value","replace","trim","form","setFieldsValue","cardNumber","regex","test","Promise","reject","Error","resolve"],"sources":["D:/UTM/Anul 2/Semestrul 2/Tehnologii web/Project/src/MyLayout.js"],"sourcesContent":["const validateCardNumber = (_, value) => {\r\n    // Eliminăm toate spațiile din valoare pentru a le adăuga noi mai târziu\r\n    value = value.replace(/\\s/g, '');\r\n\r\n    // Adăugăm automat spațiu după fiecare grup de patru cifre\r\n    value = value.replace(/(.{4})/g, '$1 ');\r\n\r\n    // Eliminăm spațiile de la sfârșitul șirului, în caz că lungimea este mai mare decât 16 cifre\r\n    value = value.trim();\r\n\r\n    // Actualizăm valoarea în câmpul de formular\r\n    form.setFieldsValue({ cardNumber: value });\r\n\r\n    // Verificăm formatul: patru cifre, o bara de spațiu, patru cifre, o bara de spațiu, patru cifre, o bara de spațiu, patru cifre\r\n    const regex = /^\\d{4}\\s\\d{4}\\s\\d{4}\\s\\d{4}$/;\r\n    if (!regex.test(value)) {\r\n        return Promise.reject(new Error('Please enter a valid 16-digit card number with spaces after every four digits'));\r\n    }\r\n    return Promise.resolve();\r\n};\r\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;EACrC;EACAA,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;EAEhC;EACAD,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;;EAEvC;EACAD,KAAK,GAAGA,KAAK,CAACE,IAAI,CAAC,CAAC;;EAEpB;EACAC,IAAI,CAACC,cAAc,CAAC;IAAEC,UAAU,EAAEL;EAAM,CAAC,CAAC;;EAE1C;EACA,MAAMM,KAAK,GAAG,8BAA8B;EAC5C,IAAI,CAACA,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC,EAAE;IACpB,OAAOQ,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+EAA+E,CAAC,CAAC;EACrH;EACA,OAAOF,OAAO,CAACG,OAAO,CAAC,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}